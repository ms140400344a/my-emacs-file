import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -notrelocatable Ubuntu.OnlineAccounts 0.1 .'

Module {
    dependencies: ["QtQuick 2.0"]
    Component {
        name: "OnlineAccounts::Account"
        prototype: "QObject"
        exports: ["Ubuntu.OnlineAccounts/Account 0.1"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "RemovalOption"
            values: {
                "RemoveAccountOnly": 0,
                "RemoveCredentials": 1
            }
        }
        Enum {
            name: "RemovalOptions"
            values: {
                "RemoveAccountOnly": 0,
                "RemoveCredentials": 1
            }
        }
        Property { name: "objectHandle"; type: "QObject"; isPointer: true }
        Property { name: "enabled"; type: "bool"; isReadonly: true }
        Property { name: "provider"; type: "QVariantMap"; isReadonly: true }
        Property { name: "displayName"; type: "string"; isReadonly: true }
        Property { name: "accountId"; type: "uint"; isReadonly: true }
        Property { name: "accountServiceHandle"; type: "QObject"; isReadonly: true; isPointer: true }
        Signal { name: "synced" }
        Signal { name: "removed" }
        Method {
            name: "updateDisplayName"
            Parameter { name: "displayName"; type: "string" }
        }
        Method {
            name: "updateEnabled"
            Parameter { name: "enabled"; type: "bool" }
        }
        Method { name: "sync" }
        Method {
            name: "remove"
            Parameter { name: "options"; type: "RemovalOptions" }
        }
        Method { name: "remove" }
    }
    Component {
        name: "OnlineAccounts::AccountService"
        prototype: "QObject"
        exports: ["Ubuntu.OnlineAccounts/AccountService 0.1"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ErrorCode"
            values: {
                "NoError": 0,
                "NoAccountError": 1,
                "UserCanceledError": 2,
                "PermissionDeniedError": 3,
                "NetworkError": 4,
                "SslError": 5,
                "InteractionRequiredError": 6
            }
        }
        Property { name: "objectHandle"; type: "QObject"; isPointer: true }
        Property { name: "enabled"; type: "bool"; isReadonly: true }
        Property { name: "serviceEnabled"; type: "bool"; isReadonly: true }
        Property { name: "provider"; type: "QVariantMap"; isReadonly: true }
        Property { name: "service"; type: "QVariantMap"; isReadonly: true }
        Property { name: "displayName"; type: "string"; isReadonly: true }
        Property { name: "accountId"; type: "uint"; isReadonly: true }
        Property { name: "settings"; type: "QVariantMap"; isReadonly: true }
        Property { name: "authData"; type: "QVariantMap"; isReadonly: true }
        Property { name: "autoSync"; type: "bool" }
        Property { name: "credentials"; type: "QObject"; isPointer: true }
        Signal {
            name: "authenticated"
            Parameter { name: "reply"; type: "QVariantMap" }
        }
        Signal {
            name: "authenticationError"
            Parameter { name: "error"; type: "QVariantMap" }
        }
        Method {
            name: "authenticate"
            Parameter { name: "sessionData"; type: "QVariantMap" }
        }
        Method { name: "authenticate" }
        Method { name: "cancelAuthentication" }
        Method {
            name: "updateServiceEnabled"
            Parameter { name: "enabled"; type: "bool" }
        }
        Method {
            name: "updateSettings"
            Parameter { name: "settings"; type: "QVariantMap" }
        }
    }
    Component {
        name: "OnlineAccounts::AccountServiceModel"
        prototype: "QAbstractListModel"
        exports: ["Ubuntu.OnlineAccounts/AccountServiceModel 0.1"]
        exportMetaObjectRevisions: [0]
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "includeDisabled"; type: "bool" }
        Property { name: "accountId"; type: "uint" }
        Property { name: "account"; type: "QObject"; isPointer: true }
        Property { name: "applicationId"; type: "string" }
        Property { name: "provider"; type: "string" }
        Property { name: "serviceType"; type: "string" }
        Property { name: "service"; type: "string" }
        Method {
            name: "get"
            type: "QVariant"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "roleName"; type: "string" }
        }
    }
    Component {
        name: "OnlineAccounts::ApplicationModel"
        prototype: "QAbstractListModel"
        exports: ["Ubuntu.OnlineAccounts/ApplicationModel 0.1"]
        exportMetaObjectRevisions: [0]
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "service"; type: "string" }
        Method {
            name: "get"
            type: "QVariant"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "roleName"; type: "string" }
        }
    }
    Component {
        name: "OnlineAccounts::Credentials"
        prototype: "QObject"
        exports: ["Ubuntu.OnlineAccounts/Credentials 0.1"]
        exportMetaObjectRevisions: [0]
        Property { name: "credentialsId"; type: "uint" }
        Property { name: "caption"; type: "string" }
        Property { name: "userName"; type: "string" }
        Property { name: "secret"; type: "string" }
        Property { name: "storeSecret"; type: "bool" }
        Property { name: "acl"; type: "QStringList" }
        Property { name: "methods"; type: "QVariantMap" }
        Signal { name: "synced" }
        Signal { name: "removed" }
        Method { name: "sync" }
        Method { name: "remove" }
    }
    Component {
        name: "OnlineAccounts::Manager"
        prototype: "QObject"
        exports: ["Ubuntu.OnlineAccounts/Manager 0.1"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Method {
            name: "loadAccount"
            type: "QObject*"
            Parameter { name: "accountId"; type: "uint" }
        }
        Method {
            name: "createAccount"
            type: "QObject*"
            Parameter { name: "providerName"; type: "string" }
        }
    }
    Component {
        name: "OnlineAccounts::ProviderModel"
        prototype: "QAbstractListModel"
        exports: ["Ubuntu.OnlineAccounts/ProviderModel 0.1"]
        exportMetaObjectRevisions: [0]
        Property { name: "applicationId"; type: "string" }
        Property { name: "count"; type: "int"; isReadonly: true }
        Method {
            name: "get"
            type: "QVariant"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "roleName"; type: "string" }
        }
    }
    Component {
        name: "QAbstractItemModel"
        prototype: "QObject"
        Enum {
            name: "LayoutChangeHint"
            values: {
                "NoLayoutChangeHint": 0,
                "VerticalSortHint": 1,
                "HorizontalSortHint": 2
            }
        }
        Enum {
            name: "CheckIndexOption"
            values: {
                "NoOption": 0,
                "IndexIsValid": 1,
                "DoNotUseParent": 2,
                "ParentIsInvalid": 4
            }
        }
        Signal {
            name: "dataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
            Parameter { name: "roles"; type: "QVector<int>" }
        }
        Signal {
            name: "dataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
        }
        Signal {
            name: "headerDataChanged"
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "layoutChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
            Parameter { name: "hint"; type: "QAbstractItemModel::LayoutChangeHint" }
        }
        Signal {
            name: "layoutChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
        }
        Signal { name: "layoutChanged" }
        Signal {
            name: "layoutAboutToBeChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
            Parameter { name: "hint"; type: "QAbstractItemModel::LayoutChangeHint" }
        }
        Signal {
            name: "layoutAboutToBeChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
        }
        Signal { name: "layoutAboutToBeChanged" }
        Signal {
            name: "rowsAboutToBeInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsAboutToBeRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal { name: "modelAboutToBeReset" }
        Signal { name: "modelReset" }
        Signal {
            name: "rowsAboutToBeMoved"
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "sourceStart"; type: "int" }
            Parameter { name: "sourceEnd"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "destinationRow"; type: "int" }
        }
        Signal {
            name: "rowsMoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "end"; type: "int" }
            Parameter { name: "destination"; type: "QModelIndex" }
            Parameter { name: "row"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeMoved"
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "sourceStart"; type: "int" }
            Parameter { name: "sourceEnd"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "destinationColumn"; type: "int" }
        }
        Signal {
            name: "columnsMoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "end"; type: "int" }
            Parameter { name: "destination"; type: "QModelIndex" }
            Parameter { name: "column"; type: "int" }
        }
        Method { name: "submit"; type: "bool" }
        Method { name: "revert" }
        Method {
            name: "hasIndex"
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "hasIndex"
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "parent"
            type: "QModelIndex"
            Parameter { name: "child"; type: "QModelIndex" }
        }
        Method {
            name: "sibling"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "idx"; type: "QModelIndex" }
        }
        Method {
            name: "rowCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "rowCount"; type: "int" }
        Method {
            name: "columnCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "columnCount"; type: "int" }
        Method {
            name: "hasChildren"
            type: "bool"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "hasChildren"; type: "bool" }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
        }
        Method {
            name: "fetchMore"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "canFetchMore"
            type: "bool"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "flags"
            type: "Qt::ItemFlags"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "hits"; type: "int" }
            Parameter { name: "flags"; type: "Qt::MatchFlags" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "hits"; type: "int" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
        }
    }
    Component { name: "QAbstractListModel"; prototype: "QAbstractItemModel" }
}
